<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
	
	<sql id="column">
		num, writer, title, content, viewcount, updatedat, createdat
	</sql>
	
	<sql id="search">
		<choose>
			<when test="condition == 'writer'">
				where writer Like '%' || #{keyword} || '%'
			</when>
			<when test="condition == 'title'">
				where title Like '%' || #{keyword} || '%'
			</when>
			<when test="condition == 'title_content'">
				where title Like '%' || #{keyword} || '%' or content Like '%' || #{keyword}	|| '%'
			</when>
		</choose>
	</sql>
	
	<delete id="deleteReaded" parameterType="long">
		delete readed_data
		where num = #{num}
	</delete>
	
	<update id="addViewCount" parameterType="long">
		update posts
		set viewcount = viewcount +1
		where num = #{num}
	</update>
	
	<select id="isReaded" parameterType="map" resultType="map">
		select *
		from readed_data
		where num = #{num} and session_Id = #{sessionId}
	</select>
	
	<insert id="insertReaded" parameterType="map">
	 	insert into readed_data
	 	(num, session_id)
	 	values(#{num}, #{sessionId})
	</insert>
	
	<!-- 
		parameter 로 전달되는 PostDto 에는 검색 keyword 가 있을수 있다. 
		keyword 가 있다면 keyword 에 해당하는 글 목록중에서 이전글의 글번호와 다음글의 글번호를 select 해야한다. 
	 -->
	<select id="getDetail" parameterType="postDto" resultType="postDto">
		SELECT *
		FROM
			(SELECT <include refid="column"/>, 
				LAG(num, 1, 0) OVER (ORDER BY num DESC) AS prevNum,
				LEAD(num, 1, 0) OVER (ORDER BY num DESC) AS nextNum
			FROM posts
			<include refid="search"/> ) result1
		WHERE num=#{num}
	</select>
	
	<select id="getData" parameterType="long" resultType="postDto">
		select <include refid="column"/>
		from posts
		where num = #{num}
	</select>
	
	<select id="getSequence" resultType="long">
		select posts_seq.nextval
		from dual
	</select>
	
	<select id="getCount" parameterType="postDto" resultType="int">
		select NVL(MAX(RowNum), 0)
		from posts
		<include refid="search"/>
	</select>
	
	<select id="getList" parameterType="postDto" resultType="postDto">
		select *
		from
			(select result1.*, rowNum as rnum
			from 
				(select <include refid="column"/>
				from posts
				<include refid="search"/>
				order by num desc) result1)
		where rnum between #{startRowNum} and #{endRowNum}
	</select>
	
	<insert id="insert" parameterType="postDto">
		insert into posts
		(num, writer, title, content)
		values(#{num}, #{writer}, #{title}, #{content})
	</insert>
	
	<update id="update" parameterType="postDto">
		update posts
		set title = #{title}, content = #{content}, updatedat = sysdate
		where num = #{num}
	</update>
	
	<delete id="delete" parameterType="long">
		delete posts
		where num = #{num}
	</delete>
	
</mapper>